generator client {
  provider = 'prisma-client-js'
}

datasource db {
  provider = 'mysql'
  url      = env('DATABASE_URL')
}

model Approval {
  id         Int       @id
  nominee_id String    @default(uuid()) @db.VarChar(255)
  title      String    @default('') @db.VarChar(60)
  reason     String    @default('') @db.VarChar(2000)
  status     Boolean   @default(false) @db.TinyInt
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Nominees   Nominees? @relation(fields: [nominee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([nominee_id])
}

model Audit {
  id          Int      @id
  user_id     String   @default(uuid()) @db.VarChar(255)
  change_set  Json
  record_id   String
  record_name String   @default('') @db.VarChar(255)
  created_at  DateTime @default(now())
  Users       Users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id])
}

model BiweaklyMeeting {
  id         String   @id @default(uuid()) @db.VarChar(255)
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Users      Users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id])
}

model Feedback {
  id             String      @id @default(uuid()) @db.VarChar(255)
  user_review_id String
  reviewed_by_id Int
  rating         Float       @default(0.0) @db.Float
  reason         String      @default('') @db.VarChar(2000)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  UserReviews    UserReviews @relation(fields: [user_review_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_review_id])
}

model Nominees {
  id             String      @id @default(uuid()) @db.VarChar(255)
  user_review_id String
  title          String      @db.VarChar(100)
  quarter_no     Int         @default(1) @db.UnsignedInt
  quarter_year   Int         @default(2022) @db.UnsignedInt
  reason         String      @default('') @db.VarChar(2000)
  created_at     DateTime    @default(now())
  deleted_at     DateTime?
  updated_at     DateTime    @updatedAt
  Approval       Approval[]
  user_reviews   UserReviews @relation(fields: [user_review_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_review_id])
}

model ReviewTags {
  id          Int              @id
  name        String           @default('') @db.VarChar(35)
  description String           @default('') @db.VarChar(2000)
  created_at  DateTime         @default(now())
  deleted_at  DateTime?
  updated_at  DateTime         @updatedAt
  templates   TemplateOnTags[]
}

model ReviewTemplates {
  id             Int              @id
  designation_id Int
  department_id  Int
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  deleted_at     DateTime?
  Designations   Designations     @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Departments    Departments      @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tags           TemplateOnTags[]

  @@index([designation_id])
  @@index([department_id])
}

model TemplateOnTags {
  id              Int             @id @default(autoincrement())
  review_temp_id  Int
  tag_id          Int
  weightage       Float           @default(0.0) @db.Float
  quarter_no      Int
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
  deleted_at      DateTime?
  ReviewTemplates ReviewTemplates @relation(fields: [review_temp_id], references: [id])
  ReviewTags      ReviewTags      @relation(fields: [tag_id], references: [id])
}

model Tasks {
  id             String      @id @default(uuid()) @db.VarChar(255)
  user_id        String
  user_review_id String
  description    String      @db.VarChar(2000)
  duration       DateTime    @db.Date
  rating         Float       @default(0.0) @db.Float
  status         Boolean     @default(false) @db.TinyInt
  type           String      @default('') @db.VarChar(255)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  UserReviews    UserReviews @relation(fields: [user_review_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Users          Users       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_review_id])
  @@index([user_id])
}

model UserReviews {
  id              String     @id @default(uuid()) @db.VarChar(255)
  user_id         String
  marks_received  Json
  estimated_point Float      @default(0.0) @db.Float
  is_approved     Boolean    @default(false) @db.TinyInt
  reviewed_by_id  Int
  quarter_no      Int        @default(1) @db.UnsignedInt
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
  Feedback        Feedback[]
  Nominees        Nominees[]
  Tasks           Tasks[]
  Users           Users      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id])
}

model Users {
  id                   String            @id @default(uuid()) @db.VarChar(255)
  first_name           String            @default('') @db.VarChar(30)
  last_name            String            @default('') @db.VarChar(30)
  joining_date         DateTime          @db.Date
  department_id        Int
  designation_id       Int
  email                String            @unique @db.VarChar(100)
  password             String            @default('') @db.VarChar(200)
  employee_id          Int               @db.UnsignedInt
  lead_id              Int               @db.UnsignedInt
  manager_id           Int               @db.UnsignedInt
  on_leave             Boolean           @default(false) @db.TinyInt
  partial_joining_date DateTime          @db.Date
  review_date          DateTime          @db.Date
  profile_pic          String            @default('') @db.VarChar(1000)
  created_at           DateTime          @default(now())
  deleted_at           DateTime?
  updated_at           DateTime          @updatedAt
  Audit                Audit[]
  BiweaklyMeeting      BiweaklyMeeting[]
  Tasks                Tasks[]
  UserReviews          UserReviews[]
  Departments          Departments       @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Designations         Designations      @relation(fields: [designation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([department_id])
  @@index([designation_id])
}

model Departments {
  id              Int               @id
  name            String            @default('') @db.VarChar(30)
  created_at      DateTime          @default(now())
  deleted_at      DateTime?
  updated_at      DateTime          @updatedAt
  Users           Users[]
  Designations    Designations[]
  ReviewTemplates ReviewTemplates[]
}

model Designations {
  id              Int               @id
  name            String            @default('') @db.VarChar(30)
  department_id   Int
  created_at      DateTime          @default(now())
  deleted_at      DateTime?
  updated_at      DateTime          @updatedAt
  Users           Users[]
  Departments     Departments       @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ReviewTemplates ReviewTemplates[]
}

model Permissions {
  id              Int               @id
  key             String            @default('') @db.VarChar(30)
  created_at      DateTime          @default(now())
  deleted_at      DateTime?
  updated_at      DateTime          @updatedAt
  UserPermissions UserPermissions[]
}

model UserPermissions {
  id              Int               @id
  designation_id  Int
  permission_id   Int
  created_at      DateTime          @default(now())
  deleted_at      DateTime?
  updated_at      DateTime          @updatedAt
  Permissions     Permissions       @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([permission_id])
}
